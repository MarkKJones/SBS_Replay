## Detector map, format:
## crate slot start_channel end_channel
bb.sh.detmap = ##
#  6     20    2     2  -1 
  6     6     4     15 0 #      0
  6     7     0     15 0 #      0
  6     8     0     15 0 #      0
  6     9     0     15 0 #      0
  6     10     0     15 0 #      0
  6     13     0     15 0 #      0
  6     14     0     15 0 #      0
  6     15     0     15 0 #      0
  6     16     0     15 0 #      0
  6     17     0     15 0 #      0
  6     18     0     15 0 #      0
  6     19     0     15 0 #      0
  6     20     0     0  0 #      0

## Optional channel map
bb.sh.chanmap =  0 1  2  3  4  5  6  7  
                 8  9 10 11 12 13 14  
                15 16 17 18 19 20 21  
                22 23 24 25 26 27 28  
                29 30 31 32 33 34 35  
                36 37 38 39 40 41 42 
                43 44 45 46 47 48 49  
                50 51 52 53 54 55 56  
		57 58 59 60 61 62 63  
		64 65 66 67 68 69 70  
		71 72 73 74 75 76 77  
		78 79 80 81 82 83 84  
		85 86 87 88 89 90 91  
		92 93 94 95 96 97 98  
		99 100 101 102 103 104 105  
		106 107 108 109 110 111 112  
		113 114 115 116 117 118 119  
		120 121 122 123 124 125 126  
		127 128 129 130 131 132 133  
		134 135 136 137 138 139 140  
		141 142 143 144 145 146 147  
		148 149 150 151 152 153 154  
		155 156 157 158 159 160 161  
		162 163 164 165 166 167 168  
		169 170 171 172 173 174 175  
		176 177 178 179 180 181 182  		        
		183 184 185 186 187 188 
## adc channels to mV assume F250 set fot 2V for 4096
bb.sh.adc.conv = 0.4882
# Threshold for pulse finding in waveform (mV)
bb.sh.adc.thres = 5.0
# Number of bins (bin=4ns) at the beginning of waveform used to determing average Pedestal
bb.sh.adc.NPedBin = 4
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
bb.sh.adc.NSB = 3
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
bb.sh.adc.NSA = 10
# Number of bin for fixed Threshold if no Threshold Crossing is found
bb.sh.adc.FixThresBin = 14
# Convert adc integral in pC to GeV
bb.sh.adc.gain = 1.0

## Positions in [m] where +z is roated by bb.theta
bb.sh.position = 0 0 2.5319 ## Need to re-check this number

## emin
bb.sh.emin= 0.1

## Size
bb.sh.size   =  0.595 2.295 0.37 # in meters

## Number of rows and columns
bb.sh.ncols =  7
bb.sh.nrows = 27

## Position of first module
bb.sh.xyz    = -1.105  0.255  0.000
## Space between modules
bb.sh.dxdydz =  10.000  10.000  0.000

